COMPLETE TEXT EXTRACTION
==================================================
Source File: /Users/pranavshah/pranav_projects/new-ocr-project/awi_main/source_documents/testimages_092051.docx
Extraction Time: 2025-08-07T09:53:05.610253
OCR Engine: easyocr
Confidence Threshold: 0.7

SUMMARY
--------------------
Document Text: 674 words, 4994 characters
OCR Text: 0 words, 0 characters
Combined Total: 674 words, 4994 characters
Images Processed: 6
OCR Text Blocks: 0

DOCUMENT TEXT
==============================

PARAGRAPHS:
[0] # Pattern Testing Samples for OCR Pipeline
[1] # Use these text samples to test if patterns.json is working correctly
[3] ## 1. NORMALIZATION PATTERNS
[5] ### remove_extra_spaces (Pattern: \\s+)
[6] # Should convert multiple spaces to single space
[7] Original: "This    has     multiple   spaces"
[8] Expected: "This has multiple spaces"
[10] Original: "Text  with	tabs  and    spaces"
[11] Expected: "Text with tabs and spaces"
[13] ### trim_whitespace (Pattern: ^\\s+|\\s+$)
[14] # Should remove leading and trailing whitespace
[15] Original: "   leading and trailing spaces   "
[16] Expected: "leading and trailing spaces"
[18] Original: "	tab at start and end	"
[19] Expected: "tab at start and end"
[21] ### normalize_dashes (Pattern: [-–—])
[22] # Should normalize en-dash (–) and em-dash (—) to hyphen (-)
[23] Original: "Part number 77–123–456–789"
[24] Expected: "Part number 77-123-456-789"
[26] Original: "Range: 100—200 units"
[27] Expected: "Range: 100-200 units"
[29] Original: "Mixed dashes: 77-123–456—789"
[30] Expected: "Mixed dashes: 77-123-456-789"
[32] ### normalize_quotes (Pattern: [\\u201c\\u201d\\u2018\\u2019`\\u00b4])
[33] # Should normalize smart quotes to standard quotes
[34] Original: "This is "quoted text" with 'single quotes'"
[35] Expected: "This is \"quoted text\" with \"single quotes\""
[37] Original: "OCR often reads `backticks´ as quotes"
[38] Expected: "OCR often reads \"backticks\" as quotes"
[40] ## 2. PREPROCESSING PATTERNS
[42] ### normalize_part_number_newlines (Pattern: (?<![0-9])77[\\s\\n\\r]*-[\\s\\n\\r]*([0-9]+)[\\s\\n\\r]*-[\\s\\n\\r]*([0-9]+)[\\s\\n\\r]*-[\\s\\n\\r]*([0-9]+))
[43] # Should normalize 77-*-*-* with newlines to clean format
[45] # Test Case 1: Normal format (should remain unchanged)
[46] Original: "77-123-456-789"
[47] Expected: "77-123-456-789"
[49] # Test Case 2: With newlines between segments
[50] Original: "77
[51] -
[52] 123
[53] -
[54] 456
[55] -
[56] 789"
[57] Expected: "77-123-456-789"
[59] # Test Case 3: With spaces and newlines mixed
[60] Original: "77 
[61]  - 
[62]  123 
[63]  - 
[64]  456 
[65]  - 
[66]  789"
[67] Expected: "77-123-456-789"
[69] # Test Case 4: In parentheses (no preceding space)
[70] Original: "(77-123-456-789)"
[71] Expected: "(77-123-456-789)"
[73] # Test Case 5: In parentheses with newlines
[74] Original: "(77
[75] -
[76] 123
[77] -
[78] 456
[79] -
[80] 789)"
[81] Expected: "(77-123-456-789)"
[83] # Test Case 6: Adjacent to text (no preceding space)
[84] Original: "Part77-123-456-789end"
[85] Expected: "Part77-123-456-789end"
[87] # Test Case 7: Should NOT match if 77 is part of larger number
[88] Original: "12377-123-456-789"
[89] Expected: "12377-123-456-789" (unchanged)
[91] # Test Case 8: Multiple part numbers in same text
[92] Original: "Parts: 77-111-222-333 and 77
[93] -
[94] 444
[95] -
[96] 555
[97] -
[98] 666"
[99] Expected: "Parts: 77-111-222-333 and 77-444-555-666"
[101] ### ocr_noise_removal (Pattern: [^\\w\\s\\-\\.\\,\\:;\\(\\)\\[\\]\\{\\}])
[102] # Should remove OCR noise characters while keeping allowed punctuation
[103] Original: "77-123-456-789@#$%^&*+=|\\<>?/"
[104] Expected: "77-123-456-789"
[106] Original: "Part: 77-123-456-789, Model (ABC-123); Price: $99.99"
[107] Expected: "Part: 77-123-456-789, Model (ABC-123); Price: 99.99"
[109] ### fix_common_ocr_errors
[110] # Should fix common OCR misrecognitions
[112] # Test Case 1: 0 → O when before digits
[113] Original: "Part 0123-456-789"
[114] Expected: "Part O123-456-789"
[116] # Test Case 2: l → 1 when before digits
[117] Original: "Code l234-567-890"
[118] Expected: "Code 1234-567-890"
[120] # Test Case 3: S → 5 when before digits
[121] Original: "Item S678-901-234"
[122] Expected: "Item 5678-901-234"
[124] # Test Case 4: Should NOT change when not before digits
[125] Original: "Part 0ABC, Code lXYZ, Item SABC"
[126] Expected: "Part 0ABC, Code lXYZ, Item SABC" (unchanged)
[128] ## 3. VALIDATION PATTERNS (for reference)
[130] ### part_number_format_77 (Pattern: 77-\\d+-\\d+-\\d+)
[131] # These should MATCH the validation pattern:
[132] Valid: "77-123-456-789"
[133] Valid: "77-1-2-3"
[134] Valid: "77-999999-888888-777777"
[136] # These should NOT match:
[137] Invalid: "76-123-456-789" (wrong prefix)
[138] Invalid: "77-123-456" (missing segment)
[139] Invalid: "77-123-456-789-000" (extra segment)
[141] ### general_part_number_format (Pattern: \\d{2,3}-\\d{3}-\\d{6,7}-\\d{2,3})
[142] # These should MATCH the validation pattern:
[143] Valid: "12-345-678901-23"
[144] Valid: "123-456-7890123-456"
[146] # These should NOT match:
[147] Invalid: "1-345-678901-23" (first segment too short)
[148] Invalid: "12-34-678901-23" (second segment too short)
[150] ## 4. COMBINED TEST CASES
[151] # Test multiple patterns working together
[153] ### Complex OCR Text Sample
[154] Original: "   Part  number:  77
[155] -
[156] 123
[157] -
[158] 456
[159] -
[160] 789  is  "quoted"  with  noise@#$  and  dashes–like—this   "
[162] Expected after all patterns:
[163] "Part number: 77-123-456-789 is \"quoted\" with noise and dashes-like-this"
[165] ### Real OCR Scenario
[166] Original: "(77
[167]  - 
[168]  l23
[169]  -
[170]  4S6
[171]  -
[172]  0789)  with    extra   spaces"
[174] Expected after patterns:
[175] "(77-123-456-0789) with extra spaces"
[177] ## 5. EDGE CASES
[179] ### Empty and whitespace
[180] Original: ""
[181] Expected: ""
[183] Original: "   "
[184] Expected: ""
[186] ### Numbers that should NOT be affected
[187] Original: "1277-123-456-789" (77 is part of larger number)
[188] Expected: "1277-123-456-789" (unchanged)
[190] Original: "77" (incomplete part number)
[191] Expected: "77" (unchanged)
[193] ### Mixed content
[194] Original: "Before 77-111-222-333 middle text 77
[195] -
[196] 444
[197] -
[198] 555
[199] -
[200] 666 after"
[201] Expected: "Before 77-111-222-333 middle text 77-444-555-666 after"
[203] PA89製作
[250] 77-245-0004040-00
[251] Hex Nuts, Metric, Nylon, M4*0.7, 6.90mm *3.00mm
[258] 77-160-810470-000
[259] Thread-Hex M-F Spacer M4x14 Nylon
[266] 77-160-810466-000
[267] Thread-Hex M-F Spacer M4x6 Nylon

OCR TEXT FROM IMAGES
==============================

